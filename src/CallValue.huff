
/**
 *  CALL_VALUE HUFF EXERCISE
 *
 *
 *  When a user sends a transaction to a smart contract, they can include value (ether). msg.value in solidity
 *
 *  The task is to write within the `MAIN` macro below, huff code to get and return the amount of ether sent as part of that call 
*/

#define macro MAIN() = takes(0) returns(0) {


    // store msg.value in memory at offset 0x20
    // mstore( 0x20, msg.value) :  mstore( offset, value)

    callvalue   // [  msg.value]
    0x20        // [ 0x20 , msg.value]
    mstore      // [ ] 

    // return msg.value
    // return 32 bytes of memory starting at offset 0x20
    // return( 0x20, 0x20) :  return( offset, size)
    
    0x20        // [32]
    0x20        // [0x20, 32]
    return       // []

    
}
